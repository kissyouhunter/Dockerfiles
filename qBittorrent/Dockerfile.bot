#compiling qB
FROM ghcr.io/gshang2017/libtorrent:latest as compilingqB

ARG QBITTORRENT_VER=4.4.5
ARG QBITTORRENT_EE_VER=4.4.5.10

RUN apk add --no-cache ca-certificates cmake build-base boost-dev python3-dev wget \
         py3-setuptools samurai qt5-qttools-dev libexecinfo-dev \
#qBittorrent-Enhanced-Edition
&& mkdir -p /tmp/qbbuild \
&& wget -P /tmp/qbbuild https://github.com/c0re100/qBittorrent-Enhanced-Edition/archive/release-${QBITTORRENT_EE_VER}.zip \
&& unzip /tmp/qbbuild/release-${QBITTORRENT_EE_VER}.zip -d /tmp/qbbuild \
&& cd /tmp/qbbuild/qBittorrent-Enhanced-Edition-release-${QBITTORRENT_EE_VER} \
&& cmake -B build-nox -G Ninja -D CMAKE_CXX_STANDARD_LIBRARIES="/usr/lib/libexecinfo.so" \
         -D CMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -DQT6=OFF -DGUI=OFF \
&& cmake --build build-nox -- -j $(nproc) \
&& cmake --install build-nox \
&& strip /usr/local/bin/qbittorrent-nox \
&& mv /usr/local/bin/qbittorrent-nox /usr/local/bin/qbittorrentee-nox \
#qBittorrent
&& wget -P /tmp/qbbuild https://github.com/qbittorrent/qBittorrent/archive/release-${QBITTORRENT_VER}.zip \
&& unzip /tmp/qbbuild/release-${QBITTORRENT_VER}.zip -d /tmp/qbbuild \
&& cd /tmp/qbbuild/qBittorrent-release-${QBITTORRENT_VER} \
&& cmake -B build-nox -G Ninja -D CMAKE_CXX_STANDARD_LIBRARIES="/usr/lib/libexecinfo.so" \
         -D CMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -DQT6=OFF -DGUI=OFF \
&& cmake --build build-nox -- -j $(nproc) \
&& cmake --install build-nox \
&& strip /usr/local/bin/qbittorrent-nox \
&& mkdir /qbittorrent \
&& cp --parents /usr/local/bin/qbittorrent-nox /qbittorrent \
&& cp --parents /usr/local/bin/qbittorrentee-nox /qbittorrent \
&& if [ -e /usr/lib/libtorrent-rasterbar.so.2.0 ];then cp --parents /usr/lib/libtorrent-rasterbar.so.2.0 /qbittorrent; fi \
&& if [ -e /usr/lib/libtorrent-rasterbar.so.10 ];then cp --parents /usr/lib/libtorrent-rasterbar.so.10 /qbittorrent; fi

# docker qB
FROM python:3.10.8-alpine3.16

ARG S6_VER=3.1.2.1

ENV UID=1000
ENV GID=1000
ENV UMASK=022
ENV TZ=Asia/Shanghai
ENV QB_WEBUI_PORT=8989
ENV QB_EE_BIN=false
ENV QB_TRACKERS_UPDATE_AUTO=true
ENV QB_TRACKERS_LIST_URL=https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all.txt
ENV S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0

COPY --chmod=755 root /
COPY --from=compilingqB --chmod=755 /qbittorrent /
ADD ./qbittorrent-bot /app
COPY ./run.sh /

#install bash curl tzdata python3 shadow qt5 zip
RUN apk add --no-cache build-base linux-headers bash curl ca-certificates tzdata python3 shadow qt5-qtbase-sqlite qt5-qtbase libexecinfo zip wget\
    #install rclone
    && curl https://rclone.org/install.sh | bash \
    #install s6-overlay
    && if [ "$(uname -m)" = "x86_64" ];then s6_arch=x86_64;elif [ "$(uname -m)" = "aarch64" ];then s6_arch=aarch64;elif [ "$(uname -m)" = "armv7l" ];then s6_arch=arm; fi \
    && wget -P /tmp https://github.com/just-containers/s6-overlay/releases/download/v${S6_VER}/s6-overlay-noarch.tar.xz \
    && tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz \
    && wget -P /tmp https://github.com/just-containers/s6-overlay/releases/download/v${S6_VER}/s6-overlay-${s6_arch}.tar.xz \
    && tar -C / -Jxpf /tmp/s6-overlay-${s6_arch}.tar.xz \
    && wget -P /tmp https://github.com/just-containers/s6-overlay/releases/download/v${S6_VER}/s6-overlay-symlinks-noarch.tar.xz \
    && tar -C / -Jxpf /tmp/s6-overlay-symlinks-noarch.tar.xz \
    && wget -P /tmp https://github.com/just-containers/s6-overlay/releases/download/v${S6_VER}/s6-overlay-symlinks-arch.tar.xz \
    && tar -C / -Jxpf /tmp/s6-overlay-symlinks-arch.tar.xz \
    #create qbittorrent user
    && useradd -u 1000 -U -d /config -s /bin/false qbittorrent \
    && usermod -G users qbittorrent \
    #install Search
    && wget -P /tmp https://github.com/qbittorrent/search-plugins/archive/refs/heads/master.zip \
    && unzip /tmp/master.zip -d /tmp \
    && mkdir -p /usr/local/qbittorrent/defaults/Search \
    && cp /tmp/search-plugins-master/nova3/engines/*.py /usr/local/qbittorrent/defaults/Search \
    #conf trackers
    && curl -so /tmp/trackers_all.txt $QB_TRACKERS_LIST_URL \
    && Newtrackers="Session\AdditionalTrackers=$(awk '{if(!NF){next}}1' /tmp/trackers_all.txt|sed ':a;N;s/\n/\\n/g;ta' )" \
    && echo $Newtrackers >/tmp/Newtrackers.txt \
    && sed -i '/Session\\AdditionalTrackers=/r /tmp/Newtrackers.txt' /usr/local/qbittorrent/defaults/qBittorrent.conf \
    && sed -i '1,/^Session\\AdditionalTrackers=.*/{//d;}' /usr/local/qbittorrent/defaults/qBittorrent.conf \
    # qb bot
    && cp -f /app/config.example.toml /app/config.toml \
    && cd /app && pip3 install -r requirements.txt \
    && chmod +x /run.sh \
    #clear
    && rm -rf /var/cache/apk/* /tmp/*

VOLUME /Downloads /config
EXPOSE 8989 20808 20808/udp
ENTRYPOINT [ "/init" ]
